# Generated by Django 2.1.1 on 2018-09-01 19:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClientReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=500)),
                ('review', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Dialog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('opponent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Dialog opponent')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selfDialogs', to=settings.AUTH_USER_MODEL, verbose_name='Dialog owner')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('text', models.TextField(verbose_name='Message_text')),
                ('read', models.BooleanField(default=False, verbose_name='Read')),
                ('dialog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='home.Dialog')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MessageInbox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=250)),
                ('subject', models.CharField(max_length=500)),
                ('message', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('fromUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fromUser', to=settings.AUTH_USER_MODEL)),
                ('toUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toUser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('completed', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('other_information', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectBid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('commission', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bid_reference', models.CharField(max_length=50)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='SampleServiceDisplay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_tags', models.CharField(blank=True, max_length=500)),
                ('description', models.TextField()),
                ('sample_image', models.ImageField(blank=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=250)),
                ('slug', models.SlugField(max_length=250)),
                ('description', models.TextField()),
                ('sample_image', models.ImageField(blank=True, upload_to='home')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=250)),
                ('slug', models.SlugField(max_length=250, unique=True)),
                ('image', models.ImageField(blank=True, upload_to='home')),
            ],
            options={
                'verbose_name': 'servicecategory',
                'verbose_name_plural': 'servicecategories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ServicePackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True)),
                ('delivery_timeline', models.CharField(max_length=100)),
                ('detail', models.TextField(help_text='separate each on a new line')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_package', to='home.Service')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid', models.BooleanField(default=False)),
                ('delivered', models.BooleanField(default=False)),
                ('service_returned', models.BooleanField(default=False)),
                ('completed', models.BooleanField(default=False)),
                ('reference', models.CharField(max_length=50)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_client', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.PostProject')),
                ('selected_bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.ProjectBid')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Service')),
                ('serviceprovider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_serviceprovider', to='home.ServiceProvider')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=250)),
                ('phone_number', models.IntegerField(default=0)),
                ('website', models.URLField(blank=True, default='')),
                ('bio', models.TextField(blank=True, default='')),
                ('city', models.CharField(blank=True, default='', max_length=300)),
                ('country', models.CharField(blank=True, default='', max_length=250)),
                ('occupation', models.CharField(blank=True, default='', max_length=300)),
                ('organization', models.CharField(blank=True, default='', max_length=300)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='servicepackage',
            name='serviceprovider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_provider', to='home.ServiceProvider'),
        ),
        migrations.AddField(
            model_name='service',
            name='servicecategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.ServiceCategory'),
        ),
        migrations.AddField(
            model_name='service',
            name='serviceprovider',
            field=models.ManyToManyField(to='home.ServiceProvider'),
        ),
        migrations.AddField(
            model_name='sampleservicedisplay',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Service'),
        ),
        migrations.AddField(
            model_name='sampleservicedisplay',
            name='servicecategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.ServiceCategory'),
        ),
        migrations.AddField(
            model_name='sampleservicedisplay',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.ServiceProvider'),
        ),
        migrations.AddField(
            model_name='projectbid',
            name='bidder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bidding_provider', to='home.ServiceProvider'),
        ),
        migrations.AddField(
            model_name='projectbid',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_owner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projectbid',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.PostProject'),
        ),
        migrations.AddField(
            model_name='projectbid',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_service', to='home.Service'),
        ),
        migrations.AddField(
            model_name='postproject',
            name='category',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='home.ServiceCategory'),
        ),
        migrations.AddField(
            model_name='postproject',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postproject',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Service'),
        ),
        migrations.AddField(
            model_name='postproject',
            name='serviceprovider',
            field=models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='project_awardee', to='home.ServiceProvider'),
        ),
        migrations.AddField(
            model_name='clientreview',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Service'),
        ),
        migrations.AddField(
            model_name='clientreview',
            name='serviceprovider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.ServiceProvider'),
        ),
        migrations.AddField(
            model_name='clientreview',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
